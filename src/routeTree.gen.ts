/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CompanyRouteImport } from './routes/company/route'
import { Route as PathlessLayoutRouteImport } from './routes/_pathlessLayout/route'
import { Route as IndexImport } from './routes/index'
import { Route as DemoTanstackQueryImport } from './routes/demo.tanstack-query'
import { Route as CompanyDashboardImport } from './routes/company/dashboard'
import { Route as PathlessLayoutSignUpImport } from './routes/_pathlessLayout/sign-up'

// Create/Update Routes

const CompanyRouteRoute = CompanyRouteImport.update({
  id: '/company',
  path: '/company',
  getParentRoute: () => rootRoute,
} as any)

const PathlessLayoutRouteRoute = PathlessLayoutRouteImport.update({
  id: '/_pathlessLayout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DemoTanstackQueryRoute = DemoTanstackQueryImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

const CompanyDashboardRoute = CompanyDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => CompanyRouteRoute,
} as any)

const PathlessLayoutSignUpRoute = PathlessLayoutSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => PathlessLayoutRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_pathlessLayout': {
      id: '/_pathlessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/company': {
      id: '/company'
      path: '/company'
      fullPath: '/company'
      preLoaderRoute: typeof CompanyRouteImport
      parentRoute: typeof rootRoute
    }
    '/_pathlessLayout/sign-up': {
      id: '/_pathlessLayout/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof PathlessLayoutSignUpImport
      parentRoute: typeof PathlessLayoutRouteImport
    }
    '/company/dashboard': {
      id: '/company/dashboard'
      path: '/dashboard'
      fullPath: '/company/dashboard'
      preLoaderRoute: typeof CompanyDashboardImport
      parentRoute: typeof CompanyRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface PathlessLayoutRouteRouteChildren {
  PathlessLayoutSignUpRoute: typeof PathlessLayoutSignUpRoute
}

const PathlessLayoutRouteRouteChildren: PathlessLayoutRouteRouteChildren = {
  PathlessLayoutSignUpRoute: PathlessLayoutSignUpRoute,
}

const PathlessLayoutRouteRouteWithChildren =
  PathlessLayoutRouteRoute._addFileChildren(PathlessLayoutRouteRouteChildren)

interface CompanyRouteRouteChildren {
  CompanyDashboardRoute: typeof CompanyDashboardRoute
}

const CompanyRouteRouteChildren: CompanyRouteRouteChildren = {
  CompanyDashboardRoute: CompanyDashboardRoute,
}

const CompanyRouteRouteWithChildren = CompanyRouteRoute._addFileChildren(
  CompanyRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof PathlessLayoutRouteRouteWithChildren
  '/company': typeof CompanyRouteRouteWithChildren
  '/sign-up': typeof PathlessLayoutSignUpRoute
  '/company/dashboard': typeof CompanyDashboardRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof PathlessLayoutRouteRouteWithChildren
  '/company': typeof CompanyRouteRouteWithChildren
  '/sign-up': typeof PathlessLayoutSignUpRoute
  '/company/dashboard': typeof CompanyDashboardRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_pathlessLayout': typeof PathlessLayoutRouteRouteWithChildren
  '/company': typeof CompanyRouteRouteWithChildren
  '/_pathlessLayout/sign-up': typeof PathlessLayoutSignUpRoute
  '/company/dashboard': typeof CompanyDashboardRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/company'
    | '/sign-up'
    | '/company/dashboard'
    | '/demo/tanstack-query'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/company'
    | '/sign-up'
    | '/company/dashboard'
    | '/demo/tanstack-query'
  id:
    | '__root__'
    | '/'
    | '/_pathlessLayout'
    | '/company'
    | '/_pathlessLayout/sign-up'
    | '/company/dashboard'
    | '/demo/tanstack-query'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PathlessLayoutRouteRoute: typeof PathlessLayoutRouteRouteWithChildren
  CompanyRouteRoute: typeof CompanyRouteRouteWithChildren
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PathlessLayoutRouteRoute: PathlessLayoutRouteRouteWithChildren,
  CompanyRouteRoute: CompanyRouteRouteWithChildren,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_pathlessLayout",
        "/company",
        "/demo/tanstack-query"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_pathlessLayout": {
      "filePath": "_pathlessLayout/route.tsx",
      "children": [
        "/_pathlessLayout/sign-up"
      ]
    },
    "/company": {
      "filePath": "company/route.tsx",
      "children": [
        "/company/dashboard"
      ]
    },
    "/_pathlessLayout/sign-up": {
      "filePath": "_pathlessLayout/sign-up.tsx",
      "parent": "/_pathlessLayout"
    },
    "/company/dashboard": {
      "filePath": "company/dashboard.tsx",
      "parent": "/company"
    },
    "/demo/tanstack-query": {
      "filePath": "demo.tanstack-query.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
